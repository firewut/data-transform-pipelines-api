# Generated by Django 2.1.2 on 2018-10-17 20:34

from django.core.management import call_command
from django.core.serializers import base, python
from django.db import migrations, models
import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
import uuid


from projects import workers


def load_processors_fixture(apps, schema_editor):
    old_get_model = python._get_model

    def _get_model(model_identifier):
        try:
            return apps.get_model(model_identifier)
        except (LookupError, TypeError):
            raise base.DeserializationError(
                "Invalid model identifier: '%s'" % model_identifier)

    python._get_model = _get_model

    try:
        # Call loaddata command
        call_command(
            'loaddata',
            'projects/fixtures/processors.json',
            app_label='projects'
        )
        call_command(
            'loaddata',
            'projects/fixtures/projects.json',
            app_label='projects'
        )
        call_command(
            'loaddata',
            'projects/fixtures/pipelines.json',
            app_label='projects'
        )
    finally:
        # Restore old _get_model() function
        python._get_model = old_get_model


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('ctime', models.DateTimeField(
                    null=True, blank=True, auto_now_add=True)),
                ('mtime', models.DateTimeField(null=True, blank=True, auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4,
                                        editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=666)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('processors', django.contrib.postgres.fields.jsonb.JSONField(
                    blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.CharField(editable=False,
                                        max_length=666, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=666)),
                ('image', models.TextField(blank=True, default=None, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('schema', django.contrib.postgres.fields.jsonb.JSONField()),
                ('ui_schema', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('ctime', models.DateTimeField(
                    null=True, blank=True, auto_now_add=True)),
                ('mtime', models.DateTimeField(null=True, blank=True, auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4,
                                        editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=666)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pipeline',
            name='project',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.RunPython(
            load_processors_fixture,
            lambda apps, schema_editor: None
        ),
    ]
